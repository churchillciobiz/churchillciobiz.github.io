class MusicListActivity : AppCompatActivity() {
    //var trackModelData: ArrayList<SongModel> = ArrayList()
    //var trackListAdapter: SongListAdapter? = null
    lateinit var recyclerView : RecyclerView
    override fun onCreate(savedInstanceState: Bundle?){
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_music_list)
        recyclerView = findViewById(R.id.music_list)
        val arrayList = ArrayList<SongModel>()
        arrayList.add(SongModel("jamo", "alfa", "3:00", R.drawable.image1))
        arrayList.add(SongModel("jamo", "alfa", "3:00", R.drawable.image1))
        arrayList.add(SongModel("jamo", "alfa", "3:00", R.drawable.image1))

        val myAdapter = SongListAdapter(arrayList, this)
        recyclerView.layoutManager = LinearLayoutManager(this)
        recyclerView.adapter = myAdapter
        /*if(ContextCompat.checkSelfPermission(applicationContext, Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED){
            ActivityCompat.requestPermissions(this@MusicListActivity, arrayOf(Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE), 12)
        }else{
            loadData()
        }*/
    }

    /*fun loadData(){
        val uri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI
        val selection = MediaStore.Audio.Media.IS_MUSIC + "!= 0"
        val sortOrder = MediaStore.Audio.Media.TITLE + " ASC"
        val contentResolver = contentResolver
        val cursor = contentResolver.query(uri, null, selection, null, sortOrder)
        if (cursor != null && cursor.getCount() > 0) {
            while (cursor.moveToNext()) {
                val title =
                    cursor.getString(cursor.getColumnIndex(MediaStore.Audio.Media.TITLE))
                val album =
                    cursor.getString(cursor.getColumnIndex(MediaStore.Audio.Media.ALBUM))
                val artist =
                    cursor.getString(cursor.getColumnIndex(MediaStore.Audio.Media.ARTIST))
                val duration =
                    cursor.getString(cursor.getColumnIndex(MediaStore.Audio.Media.DURATION))
                trackModelData.add(SongModel(title, artist, duration))
            }
            trackListAdapter = SongListAdapter(trackModelData)
            var layoutManager = LinearLayoutManager(applicationContext)
            music_list.layoutManager = layoutManager
            music_list.adapter = trackListAdapter
        }
        cursor!!.close()
    }

    /*override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<out String>, grantResults: IntArray) {
        if(requestCode == 12){
            if(grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED){
                Toast.makeText(applicationContext, "Permission granted", Toast.LENGTH_LONG).show()
                loadData()
            }
        }
    }*/
} */
}